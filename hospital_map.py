import streamlit as st
import pydeck as pdk
import pandas as pd

# –î–∞–Ω–Ω—ã–µ –æ –±–æ–ª—å–Ω–∏—Ü–∞—Ö
data = pd.DataFrame([
    {"name": "–ì–æ–º–µ–ª—å—Å–∫–∞—è –æ–±–ª–∞—Å—Ç–Ω–∞—è –∫–ª–∏–Ω–∏—á–µ—Å–∫–∞—è –±–æ–ª—å–Ω–∏—Ü–∞", "lat": 52.4228, "lon": 30.9784, "rkt": "Aquilion LB (16 —Å—Ä–µ–∑–æ–≤)", "mrt": "Ingenia Philips 1.5T"},
    {"name": "–ì–æ–º–µ–ª—å—Å–∫–∏–π –æ–Ω–∫–æ–¥–∏—Å–ø–∞–Ω—Å–µ—Ä", "lat": 52.4204, "lon": 31.0072, "rkt": "Aquilion Lightning (80 —Å—Ä–µ–∑–æ–≤)", "mrt": "‚Äî"},
    {"name": "–ì–æ–º–µ–ª—å—Å–∫–∞—è –≥–æ—Ä–æ–¥—Å–∫–∞—è –∫–ª–∏–Ω–∏—á–µ—Å–∫–∞—è –±–æ–ª—å–Ω–∏—Ü–∞ ‚Ññ1", "lat": 52.4416, "lon": 30.9942, "rkt": "Revolution Evo (28 —Å—Ä–µ–∑–æ–≤)", "mrt": "Ingenia Philips 1.5T"},
    {"name": "–ú–æ–∑—ã—Ä—Å–∫–∞—è –≥–æ—Ä–æ–¥—Å–∫–∞—è –±–æ–ª—å–Ω–∏—Ü–∞", "lat": 52.0424, "lon": 29.2725, "rkt": "BrightSpeed Elite (16 —Å—Ä–µ–∑–æ–≤)", "mrt": "ANKE SuperMarie 1.5T"},
    {"name": "–ú–æ–∑—ã—Ä—Å–∫–∞—è –¶–†–ë", "lat": 52.0506, "lon": 29.2596, "rkt": "Somatom go.Up (32 —Å—Ä–µ–∑–∞)", "mrt": "MagFinder WA 13200 (1.5T)"},
    {"name": "–ñ–ª–æ–±–∏–Ω—Å–∫–∞—è –¶–†–ë", "lat": 52.8923, "lon": 30.0262, "rkt": "Somatom go.Up (32 —Å—Ä–µ–∑–∞)", "mrt": "‚Äî"},
    {"name": "–°–≤–µ—Ç–ª–æ–≥–æ—Ä—Å–∫–∞—è –¶–†–ë", "lat": 52.6281, "lon": 29.7396, "rkt": "Toshiba Aquilion (16 —Å—Ä–µ–∑–æ–≤)", "mrt": "‚Äî"},
    {"name": "–†–µ—á–∏—Ü–∫–∞—è –¶–†–ë", "lat": 52.3690, "lon": 30.3896, "rkt": "Ventum (64 —Å—Ä–µ–∑–∞)", "mrt": "‚Äî"},
    {"name": "–ü–µ—Ç—Ä–∏–∫–æ–≤—Å–∫–∞—è –¶–†–ë", "lat": 52.1282, "lon": 28.4868, "rkt": "Ventum (64 —Å—Ä–µ–∑–∞)", "mrt": "‚Äî"},
    {"name": "–•–æ–π–Ω–∏–∫—Å–∫–∞—è –¶–†–ë", "lat": 51.8802, "lon": 29.6257, "rkt": "Ventum (64 —Å—Ä–µ–∑–∞)", "mrt": "‚Äî"},
    {"name": "–ß–µ—á–µ—Ä—Å–∫–∞—è –¶–†–ë", "lat": 52.9145, "lon": 30.9040, "rkt": "Ventum (64 —Å—Ä–µ–∑–∞)", "mrt": "‚Äî"},
])

# –ó–∞–≥–æ–ª–æ–≤–æ–∫
st.title("üè• –£—á—Ä–µ–∂–¥–µ–Ω–∏—è –∑–¥—Ä–∞–≤–æ–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ì–æ–º–µ–ª—å—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏")

# –§–∏–ª—å—Ç—Ä—ã
st.sidebar.header("üîé –§–∏–ª—å—Ç—Ä—ã")
has_rkt = st.sidebar.checkbox("–ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–ª—å–∫–æ —Å –†–ö–¢", value=False)
has_mrt = st.sidebar.checkbox("–ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–ª—å–∫–æ —Å –ú–†–¢", value=False)

filtered = data.copy()
if has_rkt:
    filtered = filtered[~filtered["rkt"].str.strip().isin(["‚Äî", "–ù–µ—Ç", ""])]
if has_mrt:
    filtered = filtered[~filtered["mrt"].str.strip().isin(["‚Äî", "–ù–µ—Ç", ""])]

# –í—ã–±–æ—Ä —É—á—Ä–µ–∂–¥–µ–Ω–∏—è
selected_name = st.selectbox("üìã –í—ã–±–µ—Ä–∏—Ç–µ —É—á—Ä–µ–∂–¥–µ–Ω–∏–µ", filtered["name"] if not filtered.empty else ["–ù–µ—Ç —É—á—Ä–µ–∂–¥–µ–Ω–∏–π"])

if not filtered.empty:
    selected_row = filtered[filtered["name"] == selected_name].iloc[0]
    zoom_level = 17  # –±–æ–ª–µ–µ —Å–∏–ª—å–Ω–æ–µ –ø—Ä–∏–±–ª–∏–∂–µ–Ω–∏–µ
else:
    st.warning("–ù–µ—Ç —É—á—Ä–µ–∂–¥–µ–Ω–∏–π, —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è—é—â–∏—Ö –≤—ã–±—Ä–∞–Ω–Ω—ã–º —Ñ–∏–ª—å—Ç—Ä–∞–º.")
    st.stop()

# –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–∞ –≤—Å–µ –∏ –≤—ã–±—Ä–∞–Ω–Ω–æ–µ —É—á—Ä–µ–∂–¥–µ–Ω–∏–µ
selected_df = pd.DataFrame([selected_row])
non_selected = filtered[filtered["name"] != selected_name]

# –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–∞—Ä—Ç—ã
st.pydeck_chart(pdk.Deck(
    map_style="mapbox://styles/mapbox/dark-v11",  # —Ç—ë–º–Ω–∞—è —Ç–µ–º–∞
    initial_view_state=pdk.ViewState(
        latitude=selected_row["lat"],
        longitude=selected_row["lon"],
        zoom=zoom_level,
        pitch=0,
    ),
    layers=[
        # –°–µ—Ä—ã–µ –º–∞—Ä–∫–µ—Ä—ã –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö
        pdk.Layer(
            "ScatterplotLayer",
            data=non_selected,
            get_position='[lon, lat]',
            get_radius=150,
            get_fill_color=[160, 160, 160, 100],
            pickable=True
        ),
        # –ö—Ä–∞—Å–Ω—ã–π –º–∞—Ä–∫–µ—Ä –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ
        pdk.Layer(
            "ScatterplotLayer",
            data=selected_df,
            get_position='[lon, lat]',
            get_radius=250,
            get_fill_color=[255, 0, 0, 255],
            pickable=True
        ),
        # –ü–æ–¥–ø–∏—Å–∏
        pdk.Layer(
            "TextLayer",
            data=filtered,
            get_position='[lon, lat]',
            get_text='name',
            get_size=12,
            get_color=[255, 255, 255],
            get_alignment_baseline="'bottom'"
        )
    ],
    tooltip={
        "html": "<b>{name}</b><br/>üñ• –†–ö–¢: {rkt}<br/>üß≤ –ú–†–¢: {mrt}",
        "style": {
            "backgroundColor": "white",
            "color": "black",
            "fontSize": "12px"
        }
    }
))

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –±–æ–ª—å–Ω–∏—Ü–µ
st.markdown(f"""
### ‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –±–æ–ª—å–Ω–∏—Ü–µ:
- **–ù–∞–∑–≤–∞–Ω–∏–µ:** {selected_row['name']}
- **üñ• –†–ö–¢:** {selected_row['rkt']}
- **üß≤ –ú–†–¢:** {selected_row['mrt']}
""")
