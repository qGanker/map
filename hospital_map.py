import streamlit as st
import pydeck as pdk
import pandas as pd
from PIL import Image
import base64
import time

st.set_page_config(layout="wide")

# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ –±–æ–ª—å–Ω–∏—Ü–∞—Ö
data = pd.DataFrame([
    {
        "name": "–ì–æ–º–µ–ª—å—Å–∫–∞—è –æ–±–ª–∞—Å—Ç–Ω–∞—è –∫–ª–∏–Ω–∏—á–µ—Å–∫–∞—è –±–æ–ª—å–Ω–∏—Ü–∞",
        "lat": 52.4412,
        "lon": 30.9870,
        "rkt": "Aquilion LB (16 —Å—Ä–µ–∑–æ–≤)",
        "mrt": "Ingenia Philips",
        "address": "—É–ª. –ú–∞–∑—É—Ä–æ–≤–∞, 1, –ì–æ–º–µ–ª—å",
        "phone": "+375 232 34-12-00",
        "available": "–ü–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—é –∏ –ø–ª–∞—Ç–Ω–æ",
        "image": "images/gomel_obl.png"
    },
    {
        "name": "–ì–æ–º–µ–ª—å—Å–∫–∏–π –æ–Ω–∫–æ–¥–∏—Å–ø–∞–Ω—Å–µ—Ä",
        "lat": 52.4290,
        "lon": 30.9995,
        "rkt": "Aquilion Lightning (80 —Å—Ä–µ–∑–æ–≤)",
        "mrt": "‚Äî",
        "address": "—É–ª. –ì–æ–ª–æ–≤–∞—Ü–∫–æ–≥–æ, 128, –ì–æ–º–µ–ª—å",
        "phone": "+375 232 75-91-00",
        "available": "–ü–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—é",
        "image": "images/gomel_onco.png"
    },
    {
        "name": "–ì–æ–º–µ–ª—å—Å–∫–∞—è –≥–æ—Ä–æ–¥—Å–∫–∞—è –∫–ª–∏–Ω–∏—á–µ—Å–∫–∞—è –±–æ–ª—å–Ω–∏—Ü–∞ ‚Ññ1",
        "lat": 52.4263,
        "lon": 30.9807,
        "rkt": "Revolution Evo (28 —Å—Ä–µ–∑–æ–≤)",
        "mrt": "Ingenia Philips",
        "address": "—É–ª. –õ–∞–∑—É—Ä–Ω–∞—è, 20, –ì–æ–º–µ–ª—å",
        "phone": "+375 232 33-65-00",
        "available": "–ü–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—é –∏ –ø–ª–∞—Ç–Ω–æ",
        "image": "images/gomel_gkb1.png"
    },
    {
        "name": "–ú–æ–∑—ã—Ä—Å–∫–∞—è –≥–æ—Ä–æ–¥—Å–∫–∞—è –±–æ–ª—å–Ω–∏—Ü–∞",
        "lat": 52.0456,
        "lon": 29.2450,
        "rkt": "Bright Speed Elite (16 —Å—Ä–µ–∑–æ–≤)",
        "mrt": "ANKE SuperMarie",
        "address": "—É–ª. –†—ã–∂–∫–æ–≤–∞, 78, –ú–æ–∑—ã—Ä—å",
        "phone": "+375 236 32-31-00",
        "available": "–ü–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—é",
        "image": "images/mozyr_gkb.png"
    }
])

st.title("üè• –ë–æ–ª—å–Ω–∏—Ü—ã –ì–æ–º–µ–ª—å—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏")
st.markdown("–í—ã–±–µ—Ä–∏—Ç–µ —É—á—Ä–µ–∂–¥–µ–Ω–∏–µ –Ω–∞ –∫–∞—Ä—Ç–µ –∏–ª–∏ –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ")

search_query = st.text_input("üîé –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é —É—á—Ä–µ–∂–¥–µ–Ω–∏—è")

# –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
filtered_data = data[data["name"].str.contains(search_query, case=False)] if search_query else data

selected_hospital = st.selectbox("üìã –°–ø–∏—Å–æ–∫ —É—á—Ä–µ–∂–¥–µ–Ω–∏–π:", filtered_data["name"].tolist())
hospital_info = filtered_data[filtered_data["name"] == selected_hospital].iloc[0]

# –¶–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–∞—Ä—Ç—É –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —É—á—Ä–µ–∂–¥–µ–Ω–∏—è
view_state = pdk.ViewState(
    latitude=hospital_info["lat"],
    longitude=hospital_info["lon"],
    zoom=12,
    pitch=0,
)

# –°–ª–æ–∏ –∫–∞—Ä—Ç—ã
layer_scatter = pdk.Layer(
    "ScatterplotLayer",
    data=filtered_data,
    get_position='[lon, lat]',
    get_radius=200,
    get_fill_color='[255, 0, 0, 160]',
    pickable=True
)
layer_text = pdk.Layer(
    "TextLayer",
    data=filtered_data,
    get_position='[lon, lat]',
    get_text='name',
    get_size=14,
    get_color='[0, 0, 0]',
    get_alignment_baseline="'bottom'"
)

with st.spinner("üîÑ –ó–∞–≥—Ä—É–∑–∫–∞ –∫–∞—Ä—Ç—ã..."):
    time.sleep(0.5)
    st.pydeck_chart(pdk.Deck(
        map_style='mapbox://styles/mapbox/dark-v10',
        initial_view_state=view_state,
        layers=[layer_scatter, layer_text],
        tooltip={
            "html": "<b>{name}</b><br/>–†–ö–¢: {rkt}<br/>–ú–†–¢: {mrt}",
            "style": {"backgroundColor": "white", "color": "black", "fontSize": "12px"}
        }
    ))

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —É—á—Ä–µ–∂–¥–µ–Ω–∏–∏
st.subheader(f"üè• {hospital_info['name']}")
st.write(f"**üìç –ê–¥—Ä–µ—Å:** {hospital_info['address']}")
st.write(f"**üìû –¢–µ–ª–µ—Ñ–æ–Ω:** {hospital_info['phone']}")
st.write(f"**üß† –†–ö–¢:** {hospital_info['rkt']}")
st.write(f"**üß≤ –ú–†–¢:** {hospital_info['mrt']}")
st.write(f"**üìå –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å:** {hospital_info['available']}")

# –§–æ—Ç–æ —É—á—Ä–µ–∂–¥–µ–Ω–∏—è
try:
    image = Image.open(hospital_info["image"])
    st.image(image, use_column_width=True)
except:
    st.warning("–§–æ—Ç–æ —É—á—Ä–µ–∂–¥–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")

# –ö–Ω–æ–ø–∫–∞ –æ—Ç–∫—Ä—ã—Ç—å –≤ –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç–∞—Ö
yandex_url = f"https://yandex.by/maps/?ll={hospital_info['lon']}%2C{hospital_info['lat']}&z=16"
st.markdown(f"[üìç –û—Ç–∫—Ä—ã—Ç—å –≤ –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç–∞—Ö]({yandex_url})", unsafe_allow_html=True)
